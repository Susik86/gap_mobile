{"name": "test_create_GM_team_successfully", "status": "failed", "statusDetails": {"message": "AssertionError: ‚ùå Dashboard tab is not visible!", "trace": "self = <mobile_automation_framework.tests.Genius_Meter.create_GM_team.create_genius_team_successfully_tests.TestCreateGMTeamSuccessfully object at 0x7fc18f0fbe80>\ndriver = <appium.webdriver.webdriver.WebDriver (session=\"dd37aabf-bb61-4c96-b1b1-c6181ddd75fa\")>\n\n    @pytest.fixture(autouse=True)\n    def setup(self, driver):\n        \"\"\"Setup before each test runs.\"\"\"\n        self.logger = logger\n        self.logger.info(\"üîπ Setting up Login Test\")\n    \n        self.driver = driver\n        app_package = self.driver.capabilities.get(\"appPackage\")\n    \n        if app_package:\n            self.logger.info(\"üîÑ Restarting App for a fresh session...\")\n            self.driver.terminate_app(app_package)\n            self.driver.activate_app(app_package)\n    \n        self.platform = self.driver.capabilities.get(\"platformName\", \"Unknown\")\n        self.logger.info(f\"üîç Running on platform: {self.platform}\")\n    \n        # Initialize page objects separately per test\n        self.login_page = LoginPage(self.driver, self.platform)\n        self.dashboard_page = DashboardPage(self.driver, self.platform)\n        self.gm_page = GMPage(self.driver, self.platform)\n        self.create_GM_screen = GMCreateTeamPage(self.driver, self.platform)\n        self.create_GM_screen_ios = GMCreateTeamPage(self.driver, self.platform)\n        self.create_GM_Invite_Members_screen_ios = GMInviteToTeamPage(self.driver, self.platform)\n        self.GM_Invite_find_people_screen_ios = GMInviteFindPeoplePage(self.driver, self.platform)\n    \n    \n    \n        self.strings = StringsEn().LoginPage\n        self.login_page.open_app()\n        self.logger.info(f\"üîπ Running valid login test on: {self.platform}\")\n        user = Users.get_random_valid_user()\n        email = user[\"email\"]\n        password = user[\"password\"]\n        self.logger.info(f\"üîê Logging in with: {email} / {password}\")\n        self.login_page.login(email, password)\n>       self.dashboard_page.assert_dashboard_tab_is_visible()\n\ntests/Genius_Meter/create_GM_team/create_genius_team_successfully_tests.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.dashboard_page.DashboardPage object at 0x7fc18f1b3a90>\n\n    def assert_dashboard_tab_is_visible(self):\n        \"\"\"Asserts that the Dashboard tab is visible after login.\"\"\"\n        try:\n            dashboard_tab = self.locators.get(\"dashboard_tab_btn\")\n            self.wait_for_element(dashboard_tab, timeout=10)\n            print(\"Trying to locate:\", dashboard_tab)  # Debugging print\n            if not dashboard_tab:\n                self.logger.error(\"‚ùå 'dashboard_tab_btn' locator is missing.\")\n                raise ValueError(\"‚ùå 'dashboard_tab_btn' locator is missing.\")\n    \n            element = self.driver.find_element(*dashboard_tab)\n>           assert element.is_displayed(), \"‚ùå Dashboard tab is not visible!\"\nE           AssertionError: ‚ùå Dashboard tab is not visible!\n\npages/dashboard_page.py:32: AssertionError"}, "attachments": [{"name": "log", "source": "b6ba1644-7077-4eb7-b681-d8bd1f151c72-attachment.txt", "type": "text/plain"}], "start": 1746800287002, "stop": 1746800287002, "uuid": "af58272b-4207-4f6a-9aff-df1ef54b9110", "historyId": "8c0331183bb9ad1cb7589b789b473b8f", "testCaseId": "8c0331183bb9ad1cb7589b789b473b8f", "fullName": "tests.Genius_Meter.create_GM_team.create_genius_team_successfully_tests.TestCreateGMTeamSuccessfully#test_create_GM_team_successfully", "labels": [{"name": "tag", "value": "run"}, {"name": "tag", "value": "@pytest.mark.usefixtures('driver')"}, {"name": "parentSuite", "value": "tests.Genius_Meter.create_GM_team"}, {"name": "suite", "value": "create_genius_team_successfully_tests"}, {"name": "subSuite", "value": "TestCreateGMTeamSuccessfully"}, {"name": "host", "value": "Susiks-MacBook-Pro.local"}, {"name": "thread", "value": "13015-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.Genius_Meter.create_GM_team.create_genius_team_successfully_tests"}]}