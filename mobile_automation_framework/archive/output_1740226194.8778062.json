{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}, "tests": {"0": {"status": "ERROR", "message": "self = <mobile_automation_framework.tests.test_login.TestLogin object at 0x7fe214f083d0>\nmethod = <bound method TestLogin.test_login of <mobile_automation_framework.tests.test_login.TestLogin object at 0x7fe214f083d0>>\n\n    def setup_method(self, method):\n        \"\"\"Setup method runs before each test.\"\"\"\n        logging.info(\"\ud83d\udd39 Setting up Login Test\")\n        self.driver = method.__self__.driver  # \u2705 Use only `driver`, not unpacking\n        self.platform = method.__self__.platform  # \u2705 Get platform separately\n>       self.login_page = LoginPage(self.driver, self.platform)\n\ntests/test_login.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.login_page.LoginPage object at 0x7fe215164e20>, driver = <appium.webdriver.webdriver.WebDriver (session=\"ae546f0e-b580-433d-a0d7-d399aa9011bc\")>\nplatform = 'android'\n\n    def __init__(self, driver, platform):\n        super().__init__(driver)\n        self.platform = platform  # \u2705 Store platform\n>       self.locators = LoginLocators.get_locators(platform)\nE       TypeError: get_locators() missing 1 required positional argument: 'platform'\n\npages/login_page.py:10: TypeError\n", "test_name": "test_login", "rerun": "0"}}, "suite_name": "tests/test_login.py"}}}, "date": "February 22, 2025", "start_time": 1740225908.225713, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "1", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "1"}