{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 2}, "tests": {"0": {"status": "ERROR", "message": "request = <SubRequest 'driver' for <Function test_invalid_login_pop_up>>\n\n    @pytest.fixture(scope=\"class\")\n    def driver(request):\n        \"\"\"Fixture to initialize and quit Appium driver for each test class.\"\"\"\n        logger = logging.getLogger(\"mobile_framework_logger\")\n        platform = request.config.getoption(\"--platform\")\n    \n        if not platform:\n            logger.error(\"\u274c Missing '--platform' argument! Use --platform=android or --platform=ios\")\n            raise pytest.UsageError(\"\u274c Missing '--platform' argument! Use --platform=android or --platform=ios\")\n    \n        logger.info(f\"\ud83d\ude97 Initializing WebDriver for {platform}...\")\n    \n        driver = None\n        try:\n>           driver = get_driver(platform)\n\nconftest.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nplatform = 'iOS'\n\n    def get_driver(platform):\n        \"\"\"Initialize and return the Appium driver for the given platform.\"\"\"\n    \n        logging.info(f\"\ud83d\udd0d Available CONFIG keys: {CONFIG.keys()}\")\n        logging.info(f\"\ud83d\udd0d APPIUM_SERVER_URL: {APPIUM_SERVER_URL}\")\n    \n        logging.info(f\"\ud83d\udd0d Checking CONFIG for platform: {platform}\")\n        capabilities = CONFIG.get(platform)\n        logging.info(f\"\ud83d\udd0d Retrieved Capabilities: {capabilities}\")\n    \n        if not capabilities:\n            logging.error(f\"\u274c No capabilities found for platform: {platform}. Check CONFIG!\")\n>           raise ValueError(f\"\u274c No capabilities found for platform: {platform}\")\nE           ValueError: \u274c No capabilities found for platform: iOS\n\nutils/driver_manager.py:25: ValueError\n", "test_name": "test_invalid_login_pop_up", "rerun": "0"}, "1": {"status": "ERROR", "message": "request = <SubRequest 'driver' for <Function test_invalid_login_pop_up>>\n\n    @pytest.fixture(scope=\"class\")\n    def driver(request):\n        \"\"\"Fixture to initialize and quit Appium driver for each test class.\"\"\"\n        logger = logging.getLogger(\"mobile_framework_logger\")\n        platform = request.config.getoption(\"--platform\")\n    \n        if not platform:\n            logger.error(\"\u274c Missing '--platform' argument! Use --platform=android or --platform=ios\")\n            raise pytest.UsageError(\"\u274c Missing '--platform' argument! Use --platform=android or --platform=ios\")\n    \n        logger.info(f\"\ud83d\ude97 Initializing WebDriver for {platform}...\")\n    \n        driver = None\n        try:\n>           driver = get_driver(platform)\n\nconftest.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nplatform = 'iOS'\n\n    def get_driver(platform):\n        \"\"\"Initialize and return the Appium driver for the given platform.\"\"\"\n    \n        logging.info(f\"\ud83d\udd0d Available CONFIG keys: {CONFIG.keys()}\")\n        logging.info(f\"\ud83d\udd0d APPIUM_SERVER_URL: {APPIUM_SERVER_URL}\")\n    \n        logging.info(f\"\ud83d\udd0d Checking CONFIG for platform: {platform}\")\n        capabilities = CONFIG.get(platform)\n        logging.info(f\"\ud83d\udd0d Retrieved Capabilities: {capabilities}\")\n    \n        if not capabilities:\n            logging.error(f\"\u274c No capabilities found for platform: {platform}. Check CONFIG!\")\n>           raise ValueError(f\"\u274c No capabilities found for platform: {platform}\")\nE           ValueError: \u274c No capabilities found for platform: iOS\n\nutils/driver_manager.py:25: ValueError\n", "test_name": "test_valid_login", "rerun": "0"}}, "suite_name": "tests/test_login.py"}}}, "date": "March 01, 2025", "start_time": 1740843771.4006772, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "2", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "2"}