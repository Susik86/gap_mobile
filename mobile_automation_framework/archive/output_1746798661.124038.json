{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}, "tests": {"0": {"status": "ERROR", "message": "self = <mobile_automation_framework.tests.Genius_Meter.create_GM_team.create_genius_team_successfully_tests.TestCreateGMTeamSuccessfully object at 0x7fd08e8f3f10>\ndriver = <appium.webdriver.webdriver.WebDriver (session=\"043e4ddb-74e1-4b2a-bc9d-7a9a5dcc5d2e\")>\n\n    @pytest.fixture(autouse=True)\n    def setup(self, driver):\n        \"\"\"Setup before each test runs.\"\"\"\n        self.logger = logger\n        self.logger.info(\"\ud83d\udd39 Setting up Login Test\")\n    \n        self.driver = driver\n        app_package = self.driver.capabilities.get(\"appPackage\")\n    \n        if app_package:\n            self.logger.info(\"\ud83d\udd04 Restarting App for a fresh session...\")\n            self.driver.terminate_app(app_package)\n            self.driver.activate_app(app_package)\n    \n        self.platform = self.driver.capabilities.get(\"platformName\", \"Unknown\")\n        self.logger.info(f\"\ud83d\udd0d Running on platform: {self.platform}\")\n    \n        # Initialize page objects separately per test\n        self.login_page = LoginPage(self.driver, self.platform)\n        self.dashboard_page = DashboardPage(self.driver, self.platform)\n        self.gm_page = GMPage(self.driver, self.platform)\n        self.create_GM_screen = GMCreateTeamPage(self.driver, self.platform)\n>       self.create_GM_screen_ios = GMCreateTeamPage(self.driver_ios, self.platform)\nE       AttributeError: 'TestCreateGMTeamSuccessfully' object has no attribute 'driver_ios'\n\ntests/Genius_Meter/create_GM_team/create_genius_team_successfully_tests.py:40: AttributeError\n", "test_name": "test_create_GM_team_successfully", "rerun": "0"}}, "suite_name": "tests/Genius_Meter/create_GM_team/create_genius_team_successfully_tests.py"}}}, "date": "May 09, 2025", "start_time": 1746798587.6713128, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "1", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "1"}