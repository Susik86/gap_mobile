{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}, "tests": {"0": {"status": "ERROR", "message": "request = <SubRequest 'driver' for <Function test_login>>\n\n    @pytest.fixture(scope=\"class\")\n    def driver(request):\n        \"\"\"Fixture to initialize and quit Appium driver.\"\"\"\n        platform = request.config.getoption(\"--platform\")  # Get platform from CLI args\n    \n        if not platform:\n            pytest.fail(\"\u274c Missing 'platform' in test parameters!\")\n    \n>       driver = get_driver(platform)\n\nconftest.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils/driver_manager.py:19: in get_driver\n    driver = webdriver.Remote(APPIUM_SERVER_URL, capabilities)\n../Library/Python/3.8/lib/python/site-packages/appium/webdriver/webdriver.py:227: in __init__\n    super().__init__(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <[AttributeError(\"'WebDriver' object has no attribute 'session_id'\") raised in repr()] WebDriver object at 0x7fdbb9831c10>\ncommand_executor = <appium.webdriver.appium_connection.AppiumConnection object at 0x7fdbb9831fa0>, keep_alive = True, file_detector = None, options = None\nlocator_converter = <appium.webdriver.locator_converter.AppiumLocatorConverter object at 0x7fdbb9831cd0>\nweb_element_cls = <class 'appium.webdriver.webelement.WebElement'>, client_config = <selenium.webdriver.remote.client_config.ClientConfig object at 0x7fdbb9831f70>\n\n    def __init__(\n        self,\n        command_executor: Union[str, RemoteConnection] = \"http://127.0.0.1:4444\",\n        keep_alive: bool = True,\n        file_detector: Optional[FileDetector] = None,\n        options: Optional[Union[BaseOptions, List[BaseOptions]]] = None,\n        locator_converter: Optional[LocatorConverter] = None,\n        web_element_cls: Optional[type] = None,\n        client_config: Optional[ClientConfig] = None,\n    ) -> None:\n        \"\"\"Create a new driver that will issue commands using the wire\n        protocol.\n    \n        :Args:\n         - command_executor - Either a string representing URL of the remote server or a custom\n             remote_connection.RemoteConnection object. Defaults to 'http://127.0.0.1:4444/wd/hub'.\n         - keep_alive - (Deprecated) Whether to configure remote_connection.RemoteConnection to use\n             HTTP keep-alive. Defaults to True.\n         - file_detector - Pass custom file detector object during instantiation. If None,\n             then default LocalFileDetector() will be used.\n         - options - instance of a driver options.Options class\n         - locator_converter - Custom locator converter to use. Defaults to None.\n         - web_element_cls - Custom class to use for web elements. Defaults to WebElement.\n         - client_config - Custom client configuration to use. Defaults to None.\n        \"\"\"\n    \n        if isinstance(options, list):\n            capabilities = create_matches(options)\n            _ignore_local_proxy = False\n        else:\n>           capabilities = options.to_capabilities()\nE           AttributeError: 'NoneType' object has no attribute 'to_capabilities'\n\n../Library/Python/3.8/lib/python/site-packages/selenium/webdriver/remote/webdriver.py:218: AttributeError\n", "test_name": "test_login", "rerun": "0"}}, "suite_name": "tests/test_login.py"}}}, "date": "February 18, 2025", "start_time": 1739863791.702661, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "1", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "1"}