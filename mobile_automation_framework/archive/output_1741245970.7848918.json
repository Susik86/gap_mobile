{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}, "tests": {"0": {"status": "ERROR", "message": "self = <mobile_automation_framework.tests.test_login.TestLogin object at 0x7f839c03f8b0>\ndriver = <appium.webdriver.webdriver.WebDriver (session=\"fca2ef36-8b07-477d-a46d-ec289e9d7853\")>\n\n    @pytest.fixture(autouse=True)\n    def setup(self, driver):\n        \"\"\"Setup before each test runs.\"\"\"\n        self.logger = logger  # \u2705 Use centralized logger\n        self.logger.info(\"\ud83d\udd39 Setting up Login Test\")\n    \n        self.driver = driver\n        app_package = self.driver.capabilities.get(\"appPackage\")\n    \n        if app_package:\n            self.logger.info(\"\ud83d\udd04 Restarting App for a fresh session...\")\n            self.driver.terminate_app(app_package)\n            self.driver.activate_app(app_package)\n    \n        self.platform = self.driver.capabilities.get(\"platformName\", \"Unknown\")\n        self.logger.info(f\"\ud83d\udd0d Running on platform: {self.platform}\")\n    \n        self.login_page = LoginPage(self.driver, self.platform)\n        self.dashboard_page = DashboardPage(self.driver, self.platform)\n        self.gm_page = GMPage(self.driver, self.platform)\n        self.strings = StringsEn().LoginPage\n>       self.login_page.open_app()\n\ntests/test_login.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.login_page.LoginPage object at 0x7f839c16c400>\n\n    def open_app(self):\n        \"\"\"Ensure the app opens to the login screen before tests.\"\"\"\n        try:\n            self.logger.info(f\"\ud83d\udd04 Verifying that the login screen is displayed on {self.platform}...\")\n            login_button_locator = self.locators.get(\"login_button\")\n    \n            if not login_button_locator:\n                self.logger.error(f\"\u274c 'login_button' locator not found for {self.platform}\")\n                raise KeyError(f\"\u274c 'login_button' locator not found for {self.platform}\")\n    \n>           self.wait_for_element(login_button_locator)\nE           AttributeError: 'LoginPage' object has no attribute 'wait_for_element'\n\npages/login_page.py:28: AttributeError\n", "test_name": "test_valid_login", "rerun": "0"}}, "suite_name": "tests/test_login.py"}}}, "date": "March 06, 2025", "start_time": 1741245925.031887, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "1", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "1"}