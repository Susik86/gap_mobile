{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 2}, "tests": {"0": {"status": "ERROR", "message": "self = <allure_pytest.listener.AllureListener object at 0x7fa494e9b0a0>, item = <Function test_invalid_login_pop_up>\n\n    @pytest.hookimpl(hookwrapper=True)\n    def pytest_runtest_setup(self, item):\n        if not self._cache.get(item.nodeid):\n            uuid = self._cache.push(item.nodeid)\n            test_result = TestResult(name=item.name, uuid=uuid, start=now(), stop=now())\n            self.allure_logger.schedule_test(uuid, test_result)\n    \n        yield\n    \n        uuid = self._cache.get(item.nodeid)\n        test_result = self.allure_logger.get_test(uuid)\n>       for fixturedef in _test_fixtures(item):\n\n../Library/Python/3.8/lib/python/site-packages/allure_pytest/listener.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nitem = <Function test_invalid_login_pop_up>\n\n    def _test_fixtures(item):\n        fixturemanager = item.session._fixturemanager\n        fixturedefs = []\n    \n        if hasattr(item, \"fixturenames\"):\n            for name in item.fixturenames:\n>               fixturedef = fixturemanager.getfixturedefs(name, item.nodeid)\nE               AttributeError: 'str' object has no attribute 'iter_parents'\n\n../Library/Python/3.8/lib/python/site-packages/allure_pytest/listener.py:279: AttributeError\n", "test_name": "test_invalid_login_pop_up", "rerun": "0"}, "1": {"status": "ERROR", "message": "self = <allure_pytest.listener.AllureListener object at 0x7fa494e9b0a0>, item = <Function test_valid_login>\n\n    @pytest.hookimpl(hookwrapper=True)\n    def pytest_runtest_setup(self, item):\n        if not self._cache.get(item.nodeid):\n            uuid = self._cache.push(item.nodeid)\n            test_result = TestResult(name=item.name, uuid=uuid, start=now(), stop=now())\n            self.allure_logger.schedule_test(uuid, test_result)\n    \n        yield\n    \n        uuid = self._cache.get(item.nodeid)\n        test_result = self.allure_logger.get_test(uuid)\n>       for fixturedef in _test_fixtures(item):\n\n../Library/Python/3.8/lib/python/site-packages/allure_pytest/listener.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nitem = <Function test_valid_login>\n\n    def _test_fixtures(item):\n        fixturemanager = item.session._fixturemanager\n        fixturedefs = []\n    \n        if hasattr(item, \"fixturenames\"):\n            for name in item.fixturenames:\n>               fixturedef = fixturemanager.getfixturedefs(name, item.nodeid)\nE               AttributeError: 'str' object has no attribute 'iter_parents'\n\n../Library/Python/3.8/lib/python/site-packages/allure_pytest/listener.py:279: AttributeError\n", "test_name": "test_valid_login", "rerun": "0"}}, "suite_name": "tests/test_login.py"}}}, "date": "February 26, 2025", "start_time": 1740567140.08095, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "2", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "2"}